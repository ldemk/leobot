core_cm4.h:1615:26:uint32_t NVIC_GetPriorityGrouping()	4	static
core_cm4.h:1698:22:void NVIC_SetPriority(IRQn_Type, uint32_t)	16	static
core_cm4.h:1745:26:uint32_t NVIC_EncodePriority(uint32_t, uint32_t, uint32_t)	40	static
stm32f4xx_ll_rcc.h:2967:22:void LL_RCC_HSE_Enable()	4	static
stm32f4xx_ll_rcc.h:2987:26:uint32_t LL_RCC_HSE_IsReady()	4	static
stm32f4xx_ll_rcc.h:3206:22:void LL_RCC_SetSysClkSource(uint32_t)	16	static
stm32f4xx_ll_rcc.h:3222:26:uint32_t LL_RCC_GetSysClkSource()	4	static
stm32f4xx_ll_rcc.h:3242:22:void LL_RCC_SetAHBPrescaler(uint32_t)	16	static
stm32f4xx_ll_rcc.h:3258:22:void LL_RCC_SetAPB1Prescaler(uint32_t)	16	static
stm32f4xx_ll_rcc.h:3274:22:void LL_RCC_SetAPB2Prescaler(uint32_t)	16	static
stm32f4xx_ll_rcc.h:4202:22:void LL_RCC_PLL_Enable()	4	static
stm32f4xx_ll_rcc.h:4223:26:uint32_t LL_RCC_PLL_IsReady()	4	static
stm32f4xx_ll_rcc.h:4322:22:void LL_RCC_PLL_ConfigDomain_SYS(uint32_t, uint32_t, uint32_t, uint32_t)	24	static
stm32f4xx_ll_system.h:1558:22:void LL_FLASH_SetLatency(uint32_t)	16	static
stm32f4xx_ll_system.h:1584:26:uint32_t LL_FLASH_GetLatency()	4	static
stm32f4xx_ll_cortex.h:260:22:void LL_SYSTICK_SetClkSource(uint32_t)	16	static
stm32f4xx_ll_pwr.h:523:22:void LL_PWR_SetRegulVoltageScaling(uint32_t)	16	static
stm32f4xx_ll_tim.h:1065:22:void LL_TIM_EnableCounter(TIM_TypeDef*)	16	static
stm32f4xx_ll_tim.h:1222:26:uint32_t LL_TIM_GetCounterMode(TIM_TypeDef*)	16	static
stm32f4xx_ll_tim.h:1317:26:uint32_t LL_TIM_GetCounter(TIM_TypeDef*)	16	static
stm32f4xx_ll_tim.h:1536:22:void LL_TIM_CC_EnableChannel(TIM_TypeDef*, uint32_t)	16	static
stm32f4xx_ll_tim.h:2043:22:void LL_TIM_OC_SetCompareCH1(TIM_TypeDef*, uint32_t)	16	static
stm32f4xx_ll_tim.h:2060:22:void LL_TIM_OC_SetCompareCH2(TIM_TypeDef*, uint32_t)	16	static
stm32f4xx_ll_tim.h:2077:22:void LL_TIM_OC_SetCompareCH3(TIM_TypeDef*, uint32_t)	16	static
stm32f4xx_ll_tim.h:2094:22:void LL_TIM_OC_SetCompareCH4(TIM_TypeDef*, uint32_t)	16	static
time.h:51:3:ros::Time::Time()	16	static
Time.h:19:17:virtual int std_msgs::Time::serialize(unsigned char*) const	24	static
Time.h:35:17:virtual int std_msgs::Time::deserialize(unsigned char*)	24	static
Time.h:51:18:virtual const char* std_msgs::Time::getType()	16	static
Time.h:52:18:virtual const char* std_msgs::Time::getMD5()	16	static
TopicInfo.h:29:17:virtual int rosserial_msgs::TopicInfo::serialize(unsigned char*) const	40	static
TopicInfo.h:63:17:virtual int rosserial_msgs::TopicInfo::deserialize(unsigned char*)	48	static
TopicInfo.h:110:18:virtual const char* rosserial_msgs::TopicInfo::getType()	16	static
TopicInfo.h:111:18:virtual const char* rosserial_msgs::TopicInfo::getMD5()	16	static
Log.h:24:17:virtual int rosserial_msgs::Log::serialize(unsigned char*) const	24	static
Log.h:37:17:virtual int rosserial_msgs::Log::deserialize(unsigned char*)	32	static
Log.h:54:18:virtual const char* rosserial_msgs::Log::getType()	16	static
Log.h:55:18:virtual const char* rosserial_msgs::Log::getMD5()	16	static
RequestParam.h:64:17:virtual int rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const	40	static
RequestParam.h:113:17:virtual int rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)	48	static
RequestParam.h:174:18:virtual const char* rosserial_msgs::RequestParamResponse::getType()	16	static
RequestParam.h:175:18:virtual const char* rosserial_msgs::RequestParamResponse::getMD5()	16	static
publisher.h:48:3:ros::Publisher::Publisher(const char*, ros::Msg*, int)	24	static
publisher.h:57:7:int ros::Publisher::getEndpointType()	16	static
UInt16.h:17:17:virtual int std_msgs::UInt16::serialize(unsigned char*) const	24	static
UInt16.h:26:17:virtual int std_msgs::UInt16::deserialize(unsigned char*)	24	static
UInt16.h:35:18:virtual const char* std_msgs::UInt16::getType()	16	static
UInt16.h:36:18:virtual const char* std_msgs::UInt16::getMD5()	16	static
String.h:17:17:virtual int std_msgs::String::serialize(unsigned char*) const	24	static
String.h:28:17:virtual int std_msgs::String::deserialize(unsigned char*)	32	static
String.h:43:18:virtual const char* std_msgs::String::getType()	16	static
String.h:44:18:virtual const char* std_msgs::String::getMD5()	16	static
main.cpp:110:7:void motor_cb(const std_msgs::UInt16&)	16	static
msg.h:45:7:constexpr ros::Msg::Msg()	16	static
String.h:12:9:std_msgs::String::String()	16	static
main.cpp:123:7:void* TaskSpin(void*)	16	static
main.cpp:152:5:int main()	16	static
main.cpp:265:6:void SystemClock_Config()	8	static
main.cpp:327:6:void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef*)	16	static
main.cpp:346:6:void _Error_Handler(const char*, int)	16	static
main.cpp:364:6:void assert_failed(uint8_t*, uint32_t)	16	static
node_handle.h:50:7:constexpr ros::NodeHandleBase_::NodeHandleBase_()	16	static
RequestParam.h:51:9:rosserial_msgs::RequestParamResponse::RequestParamResponse()	16	static
node_handle.h:128:3:ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::NodeHandle_() [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	32	static
subscriber.h:44:7:ros::Subscriber_::Subscriber_()	16	static
UInt16.h:12:9:std_msgs::UInt16::UInt16()	16	static
subscriber.h:107:3:ros::Subscriber<MsgT, void>::Subscriber(const char*, ros::Subscriber<MsgT, void>::CallbackT, int) [with MsgT = std_msgs::UInt16]	24	static
main.cpp:370:1:void __static_initialization_and_destruction_0(int, int)	16	static
subscriber.h:114:16:void ros::Subscriber<MsgT, void>::callback(unsigned char*) [with MsgT = std_msgs::UInt16]	16	static
subscriber.h:128:15:int ros::Subscriber<MsgT, void>::getEndpointType() [with MsgT = std_msgs::UInt16]	16	static
subscriber.h:120:24:const char* ros::Subscriber<MsgT, void>::getMsgType() [with MsgT = std_msgs::UInt16]	16	static
subscriber.h:124:24:const char* ros::Subscriber<MsgT, void>::getMsgMD5() [with MsgT = std_msgs::UInt16]	16	static
node_handle.h:511:15:int ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::publish(int, const ros::Msg*) [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	40	static
node_handle.h:212:15:int ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::spinOnce() [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	24	static
node_handle.h:363:16:bool ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::connected() [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	16	static
node_handle.h:573:8:void ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::logerror(const char*) [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	16	static
Time.h:14:9:std_msgs::Time::Time()	16	static
node_handle.h:372:8:void ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::requestSyncTime() [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	32	static
TopicInfo.h:12:9:rosserial_msgs::TopicInfo::TopicInfo()	16	static
node_handle.h:480:8:void ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::negotiateTopics() [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	56	static
node_handle.h:379:8:void ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::syncTime(uint8_t*) [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	32	static
Log.h:13:9:rosserial_msgs::Log::Log()	16	static
node_handle.h:552:8:void ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::log(char, const char*) [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	40	static
node_handle.h:402:8:void ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::setNow(ros::Time&) [with Hardware = STM32F4Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	24	static
main.cpp:370:1:cpp)	8	static
